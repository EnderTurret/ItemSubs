plugins {
    id 'eclipse'
    id 'net.minecraftforge.gradle' version '[6.0, 6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

version = '1.19.2-1.0.0'
group = 'net.enderturret'
base {
    archivesName = 'ItemSubs'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

dependencies {
    minecraft 'net.minecraftforge:forge:1.19.2-43.2.6'
}

minecraft {
    mappings channel: 'parchment', version: '2022.11.27-1.19.2'

    runs {
        configureEach {
            mods {
                itemsubs {
                    source sourceSets.main
                }
            }
        }

        client {
            workingDirectory project.file('run')
        }

        server {
            workingDirectory project.file('run/server')
        }
    }
}

tasks.named('jar', Jar).configure {
    manifest {
        attributes([
            'Specification-Title': 'Item Subs',
            'Specification-Vendor': 'EnderTurret',
            'Specification-Version': '1',
            'Implementation-Title': project.name,
            'Implementation-Version': "${version}",
            'Implementation-Vendor' : 'EnderTurret',
            'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

tasks.withType(GenerateModuleMetadata).configureEach {
    enabled = false
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

tasks.named('processResources', ProcessResources).configure {
    doLast {
        fileTree(dir: outputs.files.asPath, include: '**/*.json').each {
            File file -> file.text = groovy.json.JsonOutput.toJson(new groovy.json.JsonSlurper().parse(file))
        }
    }
}